{"version":3,"sources":["components/Contacts/icons/iconfinder_1_759442.svg","components/Contacts/icons/iconfinder_glyph-18_3403715.svg","components/Contacts/icons/iconfinder_m-17_4230547.svg","components/Contacts/contactList.js","components/Contacts/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ContactList","getIcon","props","gender","FemaleIcon","MaleIcon","AnonimIcon","className","src","this","alt","firstName","lastName","phone","Component","Contacts","state","contacts","search","male","female","filterByName","anonim","searchContacts","e","setState","target","value","changeMale","checked","changeFemale","changeAnon","serchVal","toLowerCase","filter","item","includes","filterGender","type","onChange","placeholder","map","name","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1291d8c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iconfinder_1_759442.f3757028.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_glyph-18_3403715.2869e162.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_m-17_4230547.8a7c6e6c.svg\";","import React, {Component} from 'react';\r\nimport FemaleIcon from './icons/iconfinder_1_759442.svg';\r\nimport MaleIcon from './icons/iconfinder_glyph-18_3403715.svg';\r\nimport AnonimIcon from './icons/iconfinder_m-17_4230547.svg';\r\nimport './ContactsStyle.css';\r\n\r\n\r\nexport default class ContactList extends Component {\r\n    getIcon = () => {\r\n        if (this.props.gender === \"female\") {\r\n          return FemaleIcon;\r\n        } else if (this.props.gender === \"male\") {\r\n          return MaleIcon;\r\n        } else {\r\n          return AnonimIcon;\r\n        }};\r\n    render() {\r\n        return(\r\n        <div className=\"contactList\">\r\n        <p className=\"contactGender\"><img src={this.getIcon()} alt=\"gender icon\" className=\"gender__img\"></img></p>\r\n        <p className=\"contactName\">{this.props.firstName} {this.props.lastName}</p>\r\n        <p className=\"contactPhone\">{this.props.phone}</p>\r\n    \r\n        </div>\r\n    )\r\n        };\r\n\r\n};\r\n \r\n\r\n        \r\n\r\n\r\n\r\n    ","import React, { Component } from 'react';\r\nimport ContactList from './contactList';\r\nimport './ContactsStyle.css';\r\n\r\n\r\n\r\nclass Contacts extends Component {\r\n    state = {\r\n        contacts: [\r\n     {\r\n        firstName: \"Барней\",\r\n        lastName: \"Стинсовский\",\r\n        phone: \"+380956319521\",\r\n        gender: \"male\"\r\n    }, {\r\n        firstName: \"Робин\",\r\n        lastName: \"Щербатская\",\r\n        phone: \"+380931460123\",\r\n        gender: \"female\"\r\n    }, {\r\n        firstName: \"Аномный\",\r\n        lastName: \"Анонимус\",\r\n        phone: \"+380666666666\"\r\n    }, {\r\n        firstName: \"Лилия\",\r\n        lastName: \"Олдровна\",\r\n        phone: \"+380504691254\",\r\n        gender: \"female\"\r\n    }, {\r\n        firstName: \"Маршэн\",\r\n        lastName: \"Эриксонян\",\r\n        phone: \"+380739432123\",\r\n        gender: \"male\"\r\n    }, {\r\n        firstName: \"Теодор\",\r\n        lastName: \"Мотсбэс\",\r\n        phone: \"+380956319521\",\r\n        gender: \"male\"\r\n    }\r\n],\r\n        search: '',\r\n        male: true,\r\n        female: true,\r\n        filterByName: true,\r\n        anonim: true,\r\n};\r\n\r\nsearchContacts = (e) => {\r\n    this.setState({\r\n        search: e.target.value,\r\n    });\r\n};\r\nchangeMale = (e) => {\r\n    this.setState({\r\n        male: e.target.checked\r\n    })\r\n};\r\nchangeFemale = (e) => {\r\n    this.setState({\r\n        female: e.target.checked\r\n    })\r\n};\r\nchangeAnon = (e) => {\r\n    this.setState({\r\n        anonim: e.target.checked\r\n    })\r\n};\r\nfilterByName = () => {\r\n    const serchVal = this.state.search.toLowerCase();\r\n    return this.state.contacts.filter(item => (\r\n        item.lastName.toLowerCase().includes(serchVal)||\r\n        item.firstName.toLowerCase().includes(serchVal) ||\r\n        item.phone.includes(serchVal)\r\n    ));\r\n};\r\nfilterGender = () => {\r\n    return this.filterByName().filter(item => {\r\n        return item.gender ? (this.state.female && item.gender === \"female\") ||\r\n        (this.state.male && item.gender === \"male\") : (this.state.anonim)\r\n    });\r\n}\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"phone\">\r\n        <div className=\"ContactsBook\">\r\n            <div className=\"gender_box\">\r\n                <div className=\"gender_items\">\r\n                    <label>Male\r\n                    <input type=\"checkbox\" className = \"apple-switch\" checked = {this.state.male} onChange={this.changeMale}/>\r\n                    </label>\r\n                    <label>Female\r\n                    <input type=\"checkbox\" className = \"apple-switch\" checked = {this.state.female} onChange={this.changeFemale}/>\r\n                    </label>\r\n                    <label>Anonim\r\n                    <input type=\"checkbox\" className = \"apple-switch\" checked = {this.state.anonim} onChange={this.changeAnon}/>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n                <div className=\"search\">\r\n                    <input className=\"serchInput\" placeholder = \"Search\"\r\n                    value={this.state.search} onChange={this.searchContacts}></input>\r\n                </div>\r\n                    <div className=\"contact_list\">\r\n                        <h3 className=\"contactsHead\">Contacts</h3>\r\n                        {this.filterGender().map((name, index) => {\r\n                            return (\r\n                                <ContactList\r\n                                gender={name.gender}\r\n                                firstName={name.firstName}\r\n                                lastName={name.lastName}\r\n                                phone={name.phone}\r\n                                \r\n                                key={index} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n        </div>\r\n        </div>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Contacts;","import React from 'react';\nimport Contacts from './components/Contacts';\nimport './App.css'\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Contacts/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}